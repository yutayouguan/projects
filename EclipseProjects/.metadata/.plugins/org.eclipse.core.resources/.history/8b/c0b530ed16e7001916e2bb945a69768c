package mi.yike.thread;

/**
 * @author wangmeng 生产者消费者问题：线程之间的通讯
 * 
 *
 */
//产品类
class Product {
	String name; // 产品名
	double price; // 价格
	boolean flag=false; //产品是否生成完成的标志，默认为FALSE，没有生成

}

//生产者类
class Producer extends Thread {
	Product product; // 产品
    
	public Producer(String name, Product product) {
		super(name);
		this.product = product;
	}

	@Override
	public void run() {
		int i = 0;
		while (true) {
			synchronized (product) {
				if (i % 2 == 0) {
					product.name = "🍎";
					try {
						Thread.sleep(1000);
					} catch (InterruptedException e) {
						
						e.printStackTrace();
					}
					product.price = 5.6;
				} else {
					product.name = "🍓";
					product.price = 10.0;
				}
				
				i++;
				System.out.println(this.getName() + "生产了" + product.name + "价钱为" + product.price);
				
			}
		}

	}

}

//消费者类
class Consumer extends Thread {
	Product product; // 产品

	public Consumer(String name, Product product) {
		// TODO Auto-generated constructor stub
		super(name);
		this.product = product;
	}

	@Override
	public void run() {
		while (true) {
			synchronized (product) {
				System.out.println(Thread.currentThread().getName() + "消费了" + product.name + "价钱为：" + product.price);
			}

		}
	}
}

public class Demo2 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Product product = new Product();// 产品对象
		Producer producer = new Producer("生产者", product); // 生产者对象
		Consumer consumer = new Consumer("消费者", product);// 消费者对象
		producer.start(); //开启线程
		consumer.start();

	}

}
