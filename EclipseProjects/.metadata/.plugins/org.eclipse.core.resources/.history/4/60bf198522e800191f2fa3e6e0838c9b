package ml.yike.collelction;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Iterator;

/**
 * @author wangmeng
 *----|collection  单例集合的根接口
 *-----|list  如果实现了List接口的集合类，该集合具备的特点：有序、可重复
 *-----|set 如果实现了set接口的集合类，该集合具备的特点：无序、不可重复
 *Collection --- 的迭代方法
 *toArray()  返回把数据存储在一个object类型的数组中在返回，Object[] 可以存储任意类型的数据
 *iterator() 迭代器的作用，用来抓取集合中的元素
 *迭代器的方法：
 *hasNext（） 问是否还有元素可以迭代，有返回TRUE。
 *next（） 获取元素
 *void remove（） 移出迭代器最后返回的元素
 *NoSuchElementException：在迭代器中时常出现，
 */
public class Demo1 {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
Collection collection =new  ArrayList();
collection.add("亦可");
collection.add("王星");
collection.add("小可");
collection.add("李可");
//遍历集合的元素----|方式一：可以使用toArray方法
Object[] arr=collection.toArray(); //把集合的元素存储到object的数组中返回。
System.out.println(Arrays.toString(arr));
//遍历集合的元素----|方式二：可以使用iterator方法(迭代器遍历）

Iterator iterator = collection.iterator();  //返回一个迭代器，iterator方法返回的其实是他的实现类（多态的体现）
System.out.println("有元素嘛："+iterator.hasNext());
//清空集合中的元素
while (iterator.hasNext()) {
	iterator.next();

	iterator.remove();

}
System.out.println("元素："+collection);


	}

}
